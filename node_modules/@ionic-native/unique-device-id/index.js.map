{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/unique-device-id/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;;;IA6BP,kCAAiB;;;;IAEnD;;;OAGG;;;;;IAEH,4BAAG;;;;kBAAsB,MAAM,CAAC,EAAE;;gBARnC,UAAU;;;QAOR,OAAO,EAAE;;;;6CACwB;;;;;;;;;;;;;;;;;;;;IAPvB,cAAc;QAR1B,MAAM,CAAC;YACN,UAAU,EAAE,gBAAgB;YAC5B,MAAM,EAAE,+BAA+B;YACvC,SAAS,EAAE,+BAA+B;YAC1C,IAAI,EAAE,0CAA0C;YAChD,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,iBAAiB,CAAC;SACjD,CAAC;OAEW,cAAc,EAS1B;yBAvCD;EA8BoC,iBAAiB;SAAxC,cAAc","sourcesContent":["import { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\n\n/**\n * @name Unique Device ID\n * @description\n * This plugin produces a unique, cross-install, app-specific device id.\n *\n * @usage\n * ```typescript\n * import { UniqueDeviceID } from '@ionic-native/unique-device-id';\n *\n * constructor(private uniqueDeviceID: UniqueDeviceID) { }\n *\n * ...\n *\n * this.uniqueDeviceID.get()\n *   .then((uuid: any) => console.log(uuid))\n *   .catch((error: any) => console.log(error));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'UniqueDeviceID',\n  plugin: 'cordova-plugin-uniquedeviceid',\n  pluginRef: 'window.plugins.uniqueDeviceID',\n  repo: 'https://github.com/Paldom/UniqueDeviceID',\n  platforms: ['Android', 'iOS', 'Windows Phone 8']\n})\n@Injectable()\nexport class UniqueDeviceID extends IonicNativePlugin {\n\n  /**\n   * Gets a unique, cross-install, app-specific device id.\n   * @return {Promise<string>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  get(): Promise<string> { return; }\n\n}\n"]}